<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport"
    content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover">

  <title>Do Task for Me | Assignment Request Form</title>


  <!-- Google tag (gtag.js) -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-63WD5GF493"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-63WD5GF493');
  </script>

  <meta name="description" content="Just get your assignment done today by submitting the request on 'Do Task For Me'">
  <meta name="Keywords" content="Assignments, Tasks, and Projects">
  <meta name="robots" content="noindex, nofollow">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="shortcut icon" href="/favicon.ico">
  <link rel="icon" href="/images/logo.jpg" type="image/jpeg">

  <link rel="manifest" href="/site.webmanifest">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#ffbe21">
  <meta name="msapplication-TileColor" content="#ffffff">
  <meta name="theme-color" content="#ffffff">
  <script async="" src="https://www.clarity.ms/s/0.7.47/clarity.js"></script>
  <script async="" src="https://www.clarity.ms/tag/g5hk9hdqb9?ref=gtm2"></script>
  <script async="" src="https://connect.facebook.net/en_US/fbevents.js"></script>

  <link href="./css/main/form-css/order-53ff9473.137d858b94a60bb5a04a.css" rel="stylesheet" as="style" media="all"
    onload="this.rel='stylesheet'">
  <noscript>
    <link rel="stylesheet" href="./css/main/form-css/order-53ff9473.137d858b94a60bb5a04a.css">
  </noscript>

  <link rel="stylesheet" href="./css/main/form-css/components.css">
  <link rel="stylesheet" href="./css/main/form-css/commons.18d93a6a.css">
  <link rel="stylesheet" href="./css/main/form-css/main.0d92b94e.css">
  <link rel="stylesheet" href="./css/main/form-css/app.6c2a09a6.css">

  <script src="components.js"></script>
  <script src="commons.a029c3a0.js"></script>
  <script src="main.0cbbb929.js"></script>
  <script src="app.70cb9c8a.js"></script>


  <style type="text/css">
    :where(html[dir="ltr"]),
    :where([data-sonner-toaster][dir="ltr"]) {
      --toast-icon-margin-start: -3px;
      --toast-icon-margin-end: 4px;
      --toast-svg-margin-start: -1px;
      --toast-svg-margin-end: 0px;
      --toast-button-margin-start: auto;
      --toast-button-margin-end: 0;
      --toast-close-button-start: 0;
      --toast-close-button-end: unset;
      --toast-close-button-transform: translate(-35%, -35%)
    }

    :where(html[dir="rtl"]),
    :where([data-sonner-toaster][dir="rtl"]) {
      --toast-icon-margin-start: 4px;
      --toast-icon-margin-end: -3px;
      --toast-svg-margin-start: 0px;
      --toast-svg-margin-end: -1px;
      --toast-button-margin-start: 0;
      --toast-button-margin-end: auto;
      --toast-close-button-start: unset;
      --toast-close-button-end: 0;
      --toast-close-button-transform: translate(35%, -35%)
    }

    :where([data-sonner-toaster]) {
      position: fixed;
      width: var(--width);
      font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
      --gray1: hsl(0, 0%, 99%);
      --gray2: hsl(0, 0%, 97.3%);
      --gray3: hsl(0, 0%, 95.1%);
      --gray4: hsl(0, 0%, 93%);
      --gray5: hsl(0, 0%, 90.9%);
      --gray6: hsl(0, 0%, 88.7%);
      --gray7: hsl(0, 0%, 85.8%);
      --gray8: hsl(0, 0%, 78%);
      --gray9: hsl(0, 0%, 56.1%);
      --gray10: hsl(0, 0%, 52.3%);
      --gray11: hsl(0, 0%, 43.5%);
      --gray12: hsl(0, 0%, 9%);
      --border-radius: 8px;
      box-sizing: border-box;
      padding: 0;
      margin: 0;
      list-style: none;
      outline: none;
      z-index: 999999999
    }

    :where([data-sonner-toaster][data-x-position="right"]) {
      right: max(var(--offset), env(safe-area-inset-right))
    }

    :where([data-sonner-toaster][data-x-position="left"]) {
      left: max(var(--offset), env(safe-area-inset-left))
    }

    :where([data-sonner-toaster][data-x-position="center"]) {
      left: 50%;
      transform: translate(-50%)
    }

    :where([data-sonner-toaster][data-y-position="top"]) {
      top: max(var(--offset), env(safe-area-inset-top))
    }

    :where([data-sonner-toaster][data-y-position="bottom"]) {
      bottom: max(var(--offset), env(safe-area-inset-bottom))
    }

    :where([data-sonner-toast]) {
      --y: translateY(100%);
      --lift-amount: calc(var(--lift) * var(--gap));
      z-index: var(--z-index);
      position: absolute;
      opacity: 0;
      transform: var(--y);
      filter: blur(0);
      touch-action: none;
      transition: transform .4s, opacity .4s, height .4s, box-shadow .2s;
      box-sizing: border-box;
      outline: none;
      overflow-wrap: anywhere
    }

    :where([data-sonner-toast][data-styled="true"]) {
      padding: 16px;
      background: var(--normal-bg);
      border: 1px solid var(--normal-border);
      color: var(--normal-text);
      border-radius: var(--border-radius);
      box-shadow: 0 4px 12px #0000001a;
      width: var(--width);
      font-size: 13px;
      display: flex;
      align-items: center;
      gap: 6px
    }

    :where([data-sonner-toast]:focus-visible) {
      box-shadow: 0 4px 12px #0000001a, 0 0 0 2px #0003
    }

    :where([data-sonner-toast][data-y-position="top"]) {
      top: 0;
      --y: translateY(-100%);
      --lift: 1;
      --lift-amount: calc(1 * var(--gap))
    }

    :where([data-sonner-toast][data-y-position="bottom"]) {
      bottom: 0;
      --y: translateY(100%);
      --lift: -1;
      --lift-amount: calc(var(--lift) * var(--gap))
    }

    :where([data-sonner-toast]) :where([data-description]) {
      font-weight: 400;
      line-height: 1.4;
      color: inherit
    }

    :where([data-sonner-toast]) :where([data-title]) {
      font-weight: 500;
      line-height: 1.5;
      color: inherit
    }

    :where([data-sonner-toast]) :where([data-icon]) {
      display: flex;
      height: 16px;
      width: 16px;
      position: relative;
      justify-content: flex-start;
      align-items: center;
      flex-shrink: 0;
      margin-left: var(--toast-icon-margin-start);
      margin-right: var(--toast-icon-margin-end)
    }

    :where([data-sonner-toast][data-promise="true"]) :where([data-icon])>svg {
      opacity: 0;
      transform: scale(.8);
      transform-origin: center;
      animation: sonner-fade-in .3s ease forwards
    }

    :where([data-sonner-toast]) :where([data-icon])>* {
      flex-shrink: 0
    }

    :where([data-sonner-toast]) :where([data-icon]) svg {
      margin-left: var(--toast-svg-margin-start);
      margin-right: var(--toast-svg-margin-end)
    }

    :where([data-sonner-toast]) :where([data-content]) {
      display: flex;
      flex-direction: column;
      gap: 2px
    }

    [data-sonner-toast][data-styled=true] [data-button] {
      border-radius: 4px;
      padding-left: 8px;
      padding-right: 8px;
      height: 24px;
      font-size: 12px;
      color: var(--normal-bg);
      background: var(--normal-text);
      margin-left: var(--toast-button-margin-start);
      margin-right: var(--toast-button-margin-end);
      border: none;
      cursor: pointer;
      outline: none;
      display: flex;
      align-items: center;
      flex-shrink: 0;
      transition: opacity .4s, box-shadow .2s
    }

    :where([data-sonner-toast]) :where([data-button]):focus-visible {
      box-shadow: 0 0 0 2px #0006
    }

    :where([data-sonner-toast]) :where([data-button]):first-of-type {
      margin-left: var(--toast-button-margin-start);
      margin-right: var(--toast-button-margin-end)
    }

    :where([data-sonner-toast]) :where([data-cancel]) {
      color: var(--normal-text);
      background: rgba(0, 0, 0, .08)
    }

    :where([data-sonner-toast][data-theme="dark"]) :where([data-cancel]) {
      background: rgba(255, 255, 255, .3)
    }

    :where([data-sonner-toast]) :where([data-close-button]) {
      position: absolute;
      left: var(--toast-close-button-start);
      right: var(--toast-close-button-end);
      top: 0;
      height: 20px;
      width: 20px;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 0;
      background: var(--gray1);
      color: var(--gray12);
      border: 1px solid var(--gray4);
      transform: var(--toast-close-button-transform);
      border-radius: 50%;
      cursor: pointer;
      z-index: 1;
      transition: opacity .1s, background .2s, border-color .2s
    }

    :where([data-sonner-toast]) :where([data-close-button]):focus-visible {
      box-shadow: 0 4px 12px #0000001a, 0 0 0 2px #0003
    }

    :where([data-sonner-toast]) :where([data-disabled="true"]) {
      cursor: not-allowed
    }

    :where([data-sonner-toast]):hover :where([data-close-button]):hover {
      background: var(--gray2);
      border-color: var(--gray5)
    }

    :where([data-sonner-toast][data-swiping="true"]):before {
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      height: 100%;
      z-index: -1
    }

    :where([data-sonner-toast][data-y-position="top"][data-swiping="true"]):before {
      bottom: 50%;
      transform: scaleY(3) translateY(50%)
    }

    :where([data-sonner-toast][data-y-position="bottom"][data-swiping="true"]):before {
      top: 50%;
      transform: scaleY(3) translateY(-50%)
    }

    :where([data-sonner-toast][data-swiping="false"][data-removed="true"]):before {
      content: "";
      position: absolute;
      inset: 0;
      transform: scaleY(2)
    }

    :where([data-sonner-toast]):after {
      content: "";
      position: absolute;
      left: 0;
      height: calc(var(--gap) + 1px);
      bottom: 100%;
      width: 100%
    }

    :where([data-sonner-toast][data-mounted="true"]) {
      --y: translateY(0);
      opacity: 1
    }

    :where([data-sonner-toast][data-expanded="false"][data-front="false"]) {
      --scale: var(--toasts-before) * .05 + 1;
      --y: translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));
      height: var(--front-toast-height)
    }

    :where([data-sonner-toast])>* {
      transition: opacity .4s
    }

    :where([data-sonner-toast][data-expanded="false"][data-front="false"][data-styled="true"])>* {
      opacity: 0
    }

    :where([data-sonner-toast][data-visible="false"]) {
      opacity: 0;
      pointer-events: none
    }

    :where([data-sonner-toast][data-mounted="true"][data-expanded="true"]) {
      --y: translateY(calc(var(--lift) * var(--offset)));
      height: var(--initial-height)
    }

    :where([data-sonner-toast][data-removed="true"][data-front="true"][data-swipe-out="false"]) {
      --y: translateY(calc(var(--lift) * -100%));
      opacity: 0
    }

    :where([data-sonner-toast][data-removed="true"][data-front="false"][data-swipe-out="false"][data-expanded="true"]) {
      --y: translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));
      opacity: 0
    }

    :where([data-sonner-toast][data-removed="true"][data-front="false"][data-swipe-out="false"][data-expanded="false"]) {
      --y: translateY(40%);
      opacity: 0;
      transition: transform .5s, opacity .2s
    }

    :where([data-sonner-toast][data-removed="true"][data-front="false"]):before {
      height: calc(var(--initial-height) + 20%)
    }

    [data-sonner-toast][data-swiping=true] {
      transform: var(--y) translateY(var(--swipe-amount, 0px));
      transition: none
    }

    [data-sonner-toast][data-swipe-out=true][data-y-position=bottom],
    [data-sonner-toast][data-swipe-out=true][data-y-position=top] {
      animation: swipe-out .2s ease-out forwards
    }

    @keyframes swipe-out {
      0% {
        transform: translateY(calc(var(--lift) * var(--offset) + var(--swipe-amount)));
        opacity: 1
      }

      to {
        transform: translateY(calc(var(--lift) * var(--offset) + var(--swipe-amount) + var(--lift) * -100%));
        opacity: 0
      }
    }

    @media (max-width: 600px) {
      [data-sonner-toaster] {
        position: fixed;
        --mobile-offset: 16px;
        right: var(--mobile-offset);
        left: var(--mobile-offset);
        width: 100%
      }

      [data-sonner-toaster] [data-sonner-toast] {
        left: 0;
        right: 0;
        width: calc(100% - var(--mobile-offset) * 2)
      }

      [data-sonner-toaster][data-x-position=left] {
        left: var(--mobile-offset)
      }

      [data-sonner-toaster][data-y-position=bottom] {
        bottom: 20px
      }

      [data-sonner-toaster][data-y-position=top] {
        top: 20px
      }

      [data-sonner-toaster][data-x-position=center] {
        left: var(--mobile-offset);
        right: var(--mobile-offset);
        transform: none
      }
    }

    [data-sonner-toaster][data-theme=light] {
      --normal-bg: #fff;
      --normal-border: var(--gray4);
      --normal-text: var(--gray12);
      --success-bg: hsl(143, 85%, 96%);
      --success-border: hsl(145, 92%, 91%);
      --success-text: hsl(140, 100%, 27%);
      --info-bg: hsl(208, 100%, 97%);
      --info-border: hsl(221, 91%, 91%);
      --info-text: hsl(210, 92%, 45%);
      --warning-bg: hsl(49, 100%, 97%);
      --warning-border: hsl(49, 91%, 91%);
      --warning-text: hsl(31, 92%, 45%);
      --error-bg: hsl(359, 100%, 97%);
      --error-border: hsl(359, 100%, 94%);
      --error-text: hsl(360, 100%, 45%)
    }

    [data-sonner-toaster][data-theme=light] [data-sonner-toast][data-invert=true] {
      --normal-bg: #000;
      --normal-border: hsl(0, 0%, 20%);
      --normal-text: var(--gray1)
    }

    [data-sonner-toaster][data-theme=dark] [data-sonner-toast][data-invert=true] {
      --normal-bg: #fff;
      --normal-border: var(--gray3);
      --normal-text: var(--gray12)
    }

    [data-sonner-toaster][data-theme=dark] {
      --normal-bg: #000;
      --normal-border: hsl(0, 0%, 20%);
      --normal-text: var(--gray1);
      --success-bg: hsl(150, 100%, 6%);
      --success-border: hsl(147, 100%, 12%);
      --success-text: hsl(150, 86%, 65%);
      --info-bg: hsl(215, 100%, 6%);
      --info-border: hsl(223, 100%, 12%);
      --info-text: hsl(216, 87%, 65%);
      --warning-bg: hsl(64, 100%, 6%);
      --warning-border: hsl(60, 100%, 12%);
      --warning-text: hsl(46, 87%, 65%);
      --error-bg: hsl(358, 76%, 10%);
      --error-border: hsl(357, 89%, 16%);
      --error-text: hsl(358, 100%, 81%)
    }

    [data-rich-colors=true] [data-sonner-toast][data-type=success],
    [data-rich-colors=true] [data-sonner-toast][data-type=success] [data-close-button] {
      background: var(--success-bg);
      border-color: var(--success-border);
      color: var(--success-text)
    }

    [data-rich-colors=true] [data-sonner-toast][data-type=info],
    [data-rich-colors=true] [data-sonner-toast][data-type=info] [data-close-button] {
      background: var(--info-bg);
      border-color: var(--info-border);
      color: var(--info-text)
    }

    [data-rich-colors=true] [data-sonner-toast][data-type=warning],
    [data-rich-colors=true] [data-sonner-toast][data-type=warning] [data-close-button] {
      background: var(--warning-bg);
      border-color: var(--warning-border);
      color: var(--warning-text)
    }

    [data-rich-colors=true] [data-sonner-toast][data-type=error],
    [data-rich-colors=true] [data-sonner-toast][data-type=error] [data-close-button] {
      background: var(--error-bg);
      border-color: var(--error-border);
      color: var(--error-text)
    }

    .sonner-loading-wrapper {
      --size: 16px;
      height: var(--size);
      width: var(--size);
      position: absolute;
      inset: 0;
      z-index: 10
    }

    .sonner-loading-wrapper[data-visible=false] {
      transform-origin: center;
      animation: sonner-fade-out .2s ease forwards
    }

    .sonner-spinner {
      position: relative;
      top: 50%;
      left: 50%;
      height: var(--size);
      width: var(--size)
    }

    .sonner-loading-bar {
      animation: sonner-spin 1.2s linear infinite;
      background: var(--gray11);
      border-radius: 6px;
      height: 8%;
      left: -10%;
      position: absolute;
      top: -3.9%;
      width: 24%
    }

    .sonner-loading-bar:nth-child(1) {
      animation-delay: -1.2s;
      transform: rotate(.0001deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(2) {
      animation-delay: -1.1s;
      transform: rotate(30deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(3) {
      animation-delay: -1s;
      transform: rotate(60deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(4) {
      animation-delay: -.9s;
      transform: rotate(90deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(5) {
      animation-delay: -.8s;
      transform: rotate(120deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(6) {
      animation-delay: -.7s;
      transform: rotate(150deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(7) {
      animation-delay: -.6s;
      transform: rotate(180deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(8) {
      animation-delay: -.5s;
      transform: rotate(210deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(9) {
      animation-delay: -.4s;
      transform: rotate(240deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(10) {
      animation-delay: -.3s;
      transform: rotate(270deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(11) {
      animation-delay: -.2s;
      transform: rotate(300deg) translate(146%)
    }

    .sonner-loading-bar:nth-child(12) {
      animation-delay: -.1s;
      transform: rotate(330deg) translate(146%)
    }

    @keyframes sonner-fade-in {
      0% {
        opacity: 0;
        transform: scale(.8)
      }

      to {
        opacity: 1;
        transform: scale(1)
      }
    }

    @keyframes sonner-fade-out {
      0% {
        opacity: 1;
        transform: scale(1)
      }

      to {
        opacity: 0;
        transform: scale(.8)
      }
    }

    @keyframes sonner-spin {
      0% {
        opacity: 1
      }

      to {
        opacity: .15
      }
    }

    @media (prefers-reduced-motion) {

      [data-sonner-toast],
      [data-sonner-toast]>*,
      .sonner-loading-bar {
        transition: none !important;
        animation: none !important
      }
    }

    .sonner-loader {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      transform-origin: center;
      transition: opacity .2s, transform .2s
    }

    .sonner-loader[data-visible=false] {
      opacity: 0;
      transform: scale(.8) translate(-50%, -50%)
    }
  </style>
  <style id="googleidentityservice_button_styles">
    .qJTHM {
      -webkit-user-select: none;
      color: #202124;
      direction: ltr;
      -webkit-touch-callout: none;
      font-family: "Roboto-Regular", arial, sans-serif;
      -webkit-font-smoothing: antialiased;
      font-weight: 400;
      margin: 0;
      overflow: hidden;
      -webkit-text-size-adjust: 100%
    }

    .ynRLnc {
      left: -9999px;
      position: absolute;
      top: -9999px
    }

    .L6cTce {
      display: none
    }

    .bltWBb {
      word-break: break-all
    }

    .hSRGPd {
      color: #1a73e8;
      cursor: pointer;
      font-weight: 500;
      text-decoration: none
    }

    .Bz112c-W3lGp {
      height: 16px;
      width: 16px
    }

    .Bz112c-E3DyYd {
      height: 20px;
      width: 20px
    }

    .Bz112c-r9oPif {
      height: 24px;
      width: 24px
    }

    .Bz112c-uaxL4e {
      -webkit-border-radius: 10px;
      border-radius: 10px
    }

    .LgbsSe-Bz112c {
      display: block
    }

    .S9gUrf-YoZ4jf,
    .S9gUrf-YoZ4jf * {
      border: none;
      margin: 0;
      padding: 0
    }

    .fFW7wc-ibnC6b>.aZ2wEe>div {
      border-color: #4285f4
    }

    .P1ekSe-ZMv3u>div:nth-child(1) {
      background-color: #1a73e8 !important
    }

    .P1ekSe-ZMv3u>div:nth-child(2),
    .P1ekSe-ZMv3u>div:nth-child(3) {
      background-image: linear-gradient(to right, rgba(255, 255, 255, .7), rgba(255, 255, 255, .7)), linear-gradient(to right, #1a73e8, #1a73e8) !important
    }

    .haAclf {
      display: inline-block
    }

    .nsm7Bb-HzV7m-LgbsSe {
      -webkit-border-radius: 4px;
      border-radius: 4px;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      -webkit-transition: background-color .218s, border-color .218s;
      transition: background-color .218s, border-color .218s;
      -webkit-user-select: none;
      -webkit-appearance: none;
      background-color: #fff;
      background-image: none;
      border: 1px solid #dadce0;
      color: #3c4043;
      cursor: pointer;
      font-family: "Google Sans", arial, sans-serif;
      font-size: 14px;
      height: 40px;
      letter-spacing: 0.25px;
      outline: none;
      overflow: hidden;
      padding: 0 12px;
      position: relative;
      text-align: center;
      vertical-align: middle;
      white-space: nowrap;
      width: auto
    }

    @media screen and (-ms-high-contrast:active) {
      .nsm7Bb-HzV7m-LgbsSe {
        border: 2px solid windowText;
        color: windowText;
      }
    }

    .nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe {
      font-size: 14px;
      height: 32px;
      letter-spacing: 0.25px;
      padding: 0 10px
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe {
      font-size: 11px;
      height: 20px;
      letter-spacing: 0.3px;
      padding: 0 8px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe {
      padding: 0;
      width: 40px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.pSzOP-SxQuSe {
      width: 32px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.purZT-SxQuSe {
      width: 20px
    }

    .nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK {
      -webkit-border-radius: 20px;
      border-radius: 20px
    }

    .nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK.pSzOP-SxQuSe {
      -webkit-border-radius: 16px;
      border-radius: 16px
    }

    .nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK.purZT-SxQuSe {
      -webkit-border-radius: 10px;
      border-radius: 10px
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc {
      border: none;
      color: #fff
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-v3pZbf-Ia7Qfc {
      background-color: #1a73e8
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-JaPV2b-Ia7Qfc {
      background-color: #202124;
      color: #e8eaed
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      height: 18px;
      margin-right: 8px;
      min-width: 18px;
      width: 18px
    }

    .nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      height: 14px;
      min-width: 14px;
      width: 14px
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      height: 10px;
      min-width: 10px;
      width: 10px
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      margin-left: 8px;
      margin-right: -4px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      margin: 0;
      padding: 10px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.pSzOP-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      padding: 8px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      padding: 4px
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-top-left-radius: 3px;
      border-top-left-radius: 3px;
      -webkit-border-bottom-left-radius: 3px;
      border-bottom-left-radius: 3px;
      display: -webkit-box;
      display: -webkit-flex;
      display: flex;
      justify-content: center;
      -webkit-align-items: center;
      align-items: center;
      background-color: #fff;
      height: 36px;
      margin-left: -10px;
      margin-right: 12px;
      min-width: 36px;
      width: 36px
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf .nsm7Bb-HzV7m-LgbsSe-Bz112c,
    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf .nsm7Bb-HzV7m-LgbsSe-Bz112c {
      margin: 0;
      padding: 0
    }

    .nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      height: 28px;
      margin-left: -8px;
      margin-right: 10px;
      min-width: 28px;
      width: 28px
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      height: 16px;
      margin-left: -6px;
      margin-right: 8px;
      min-width: 16px;
      width: 16px
    }

    .nsm7Bb-HzV7m-LgbsSe.Bz112c-LgbsSe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 3px;
      border-radius: 3px;
      margin-left: 2px;
      margin-right: 0;
      padding: 0
    }

    .nsm7Bb-HzV7m-LgbsSe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 18px;
      border-radius: 18px
    }

    .nsm7Bb-HzV7m-LgbsSe.pSzOP-SxQuSe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 14px;
      border-radius: 14px
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 8px;
      border-radius: 8px
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-bN97Pc-sM5MNb {
      display: -webkit-box;
      display: -webkit-flex;
      display: flex;
      -webkit-align-items: center;
      align-items: center;
      -webkit-flex-direction: row;
      flex-direction: row;
      justify-content: space-between;
      -webkit-flex-wrap: nowrap;
      flex-wrap: nowrap;
      height: 100%;
      position: relative;
      width: 100%
    }

    .nsm7Bb-HzV7m-LgbsSe .oXtfBe-l4eHX {
      justify-content: center
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-BPrWId {
      -webkit-flex-grow: 1;
      flex-grow: 1;
      font-family: "Google Sans", arial, sans-serif;
      font-weight: 500;
      overflow: hidden;
      text-overflow: ellipsis;
      vertical-align: top
    }

    .nsm7Bb-HzV7m-LgbsSe.purZT-SxQuSe .nsm7Bb-HzV7m-LgbsSe-BPrWId {
      font-weight: 300
    }

    .nsm7Bb-HzV7m-LgbsSe .oXtfBe-l4eHX .nsm7Bb-HzV7m-LgbsSe-BPrWId {
      -webkit-flex-grow: 0;
      flex-grow: 0
    }

    .nsm7Bb-HzV7m-LgbsSe .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      -webkit-transition: background-color .218s;
      transition: background-color .218s;
      bottom: 0;
      left: 0;
      position: absolute;
      right: 0;
      top: 0
    }

    .nsm7Bb-HzV7m-LgbsSe:hover,
    .nsm7Bb-HzV7m-LgbsSe:focus {
      -webkit-box-shadow: none;
      box-shadow: none;
      border-color: #d2e3fc;
      outline: none
    }

    .nsm7Bb-HzV7m-LgbsSe:hover .nsm7Bb-HzV7m-LgbsSe-MJoBVe,
    .nsm7Bb-HzV7m-LgbsSe:focus .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      background: rgba(66, 133, 244, .04)
    }

    .nsm7Bb-HzV7m-LgbsSe:active .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      background: rgba(66, 133, 244, .1)
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc:hover .nsm7Bb-HzV7m-LgbsSe-MJoBVe,
    .nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc:focus .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      background: rgba(255, 255, 255, .24)
    }

    .nsm7Bb-HzV7m-LgbsSe.MFS4be-Ia7Qfc:active .nsm7Bb-HzV7m-LgbsSe-MJoBVe {
      background: rgba(255, 255, 255, .32)
    }

    .nsm7Bb-HzV7m-LgbsSe .n1UuX-DkfjY {
      -webkit-border-radius: 50%;
      border-radius: 50%;
      display: -webkit-box;
      display: -webkit-flex;
      display: flex;
      height: 20px;
      margin-left: -4px;
      margin-right: 8px;
      min-width: 20px;
      width: 20px
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId {
      font-family: "Roboto";
      font-size: 12px;
      text-align: left
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .ssJRIf,
    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff .fmcmS {
      overflow: hidden;
      text-overflow: ellipsis
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff {
      display: -webkit-box;
      display: -webkit-flex;
      display: flex;
      -webkit-align-items: center;
      align-items: center;
      color: #5f6368;
      fill: #5f6368;
      font-size: 11px;
      font-weight: 400
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe.MFS4be-Ia7Qfc .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff {
      color: #e8eaed;
      fill: #e8eaed
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-BPrWId .K4efff .Bz112c {
      height: 18px;
      margin: -3px -3px -3px 2px;
      min-width: 18px;
      width: 18px
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-top-left-radius: 0;
      border-top-left-radius: 0;
      -webkit-border-bottom-left-radius: 0;
      border-bottom-left-radius: 0;
      -webkit-border-top-right-radius: 3px;
      border-top-right-radius: 3px;
      -webkit-border-bottom-right-radius: 3px;
      border-bottom-right-radius: 3px;
      margin-left: 12px;
      margin-right: -10px
    }

    .nsm7Bb-HzV7m-LgbsSe.jVeSEe.JGcpL-RbRzK .nsm7Bb-HzV7m-LgbsSe-Bz112c-haAclf {
      -webkit-border-radius: 18px;
      border-radius: 18px
    }

    .L5Fo6c-sM5MNb {
      border: 0;
      display: block;
      left: 0;
      position: relative;
      top: 0
    }

    .L5Fo6c-bF1uUb {
      -webkit-border-radius: 4px;
      border-radius: 4px;
      bottom: 0;
      cursor: pointer;
      left: 0;
      position: absolute;
      right: 0;
      top: 0
    }

    .L5Fo6c-bF1uUb:focus {
      border: none;
      outline: none
    }

    sentinel {}
  </style>
  <link id="googleidentityservice" type="text/css" media="all" href="https://accounts.google.com/gsi/style"
    rel="stylesheet">
</head>

<body style="
            font-family: 'Roboto', sans-serif;">
  <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-TJB7WC" height="0" width="0"
      style="display:none;visibility:hidden"></iframe>
  </noscript>
  <style>
    #root {
      min-height: 450px;
    }

    .flat-spinner {
      margin: 90px auto;
      position: relative;
      border-top: 5px solid rgba(0, 147, 221, 0.2);
      border-right: 5px solid rgba(0, 147, 221, 0.2);
      border-bottom: 5px solid rgba(0, 147, 221, 0.2);
      border-left: 5px solid rgba(0, 147, 221, 1);
      -webkit-transform: translateZ(0);
      -ms-transform: translateZ(0);
      transform: translateZ(0);
      -webkit-animation: flat-spinner 1s infinite linear;
      animation: flat-spinner 1s infinite linear;
    }

    .flat-spinner,
    .flat-spinner:after {
      border-radius: 50%;
      width: 64px;
      height: 64px;
    }

    @-webkit-keyframes flat-spinner {
      0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
      }

      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
      }
    }

    @keyframes flat-spinner {
      0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
      }

      100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
      }
    }

    .bundle-loading-error {
      padding: 20px;
      color: tomato;
      border: 2px solid tomato;
      display: table;
      font-size: 16px;
      margin: 100px auto;
    }

    html,
    body {
      margin: 0;
    }

    /* Just for video styling */

    .navLogo img {
      height: 48px;
    }

    .video-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      overflow: hidden;
      z-index: -1;
    }

    .video-container video {
      min-width: 100%;
      min-height: 100%;
      object-fit: cover;
    }

    .overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: -1;
    }

    @media (min-width: 980px) {
      #whatsapp {
        width: 451px;
      }

      #vivaPreparation {
        width: 451px;
      }
    }

    @media (max-width: 950px) {
      #whatsapp {
        width: 420px;
      }

      #vivaPreparation {
        width: 420px;
      }
    }

    @media (min-width: 800px) {
      .OrderForm {
        position: relative;
        left: 170px;
        margin-top: 172px;
      }

      .rc-root-layout-footer {
        position: relative;
        top: 100px;
      }

      .OrderFormHeader {
        text-align: center;
        font-size: xx-large;
      }
    }

    @media (max-width: 780px) {
      #whatsapp {
        width: 357px;
      }

      #vivaPreparation {
        width: 357px;
      }

      .OrderForm {
        margin-top: 120px;
      }
    }

    @media (max-width: 550px) {
      .OrderForm {
        margin-top: 102px;
      }
    }

    @media (max-width: 450px) {
      #whatsapp {
        width: 325px;
      }

      #vivaPreparation {
        width: 325px;
      }
    }

    @media (max-width: 390px) {
      #whatsapp {
        width: 293px;
      }

      #vivaPreparation {
        width: 293px;
      }
    }

    @media (max-width: 376px) {
      #whatsapp {
        width: 280px;
      }

      #vivaPreparation {
        width: 280px;
      }
    }

    @media (max-width: 360px) {
      #whatsapp {
        width: 268px;
      }

      #vivaPreparation {
        width: 268px;
      }
    }

    @media (max-width: 345px) {
      #whatsapp {
        width: 252px;
      }

      #vivaPreparation {
        width: 252px;
      }
    }

    @media (max-width: 600px) and (min-width: 300px) {
      .OrderForm {
        margin-top: 120px;
      }
    }

  </style>
  <%- include("../partials/header.ejs") %>

    <id="root" style="min-height: 100vh;">

      <div>
        <div class="rc-root">
          <div class="rc-root-layout">
            <div class="rc-root-layout-header">
              <!-- <div class="Header">
              <header class="cw-header">
                <div class="Page__width cw-header__inner-container">
                  <div class="cw-header__brand"><a href="/" class="cw-header__logo" title="Go to Home Page"><img
                        src="/images/logo.svg" class="cw-header__logo__img" alt="DoMyAssignments.com" width="202"
                        height="24.3"></a></div>
                  <div class="cw-header__user-info"></div>
                </div>
              </header>
            </div> -->
            </div>


            <div class="rc-root-layout-content">
              <div class="Page OrderFormPage" style="background-color: #e6eaef;">
                <div class="Page__body Page__width">

                  <div class="rc-ui-blocker rc-ui-blocker--size-m rc-ui-blocker--transparency-hard">
                    <div class="OrderForm">
                      <div class="OrderForm__header">
                        <div class="OrderFormHeader">
                          <div class="OrderFormHeader__heading">Place a new order</div>
                          <!-- <div class="CopyFormUrlBlock OrderFormHeader__copy-form-url" role="button"
                          aria-label="Open menu" tabindex="0">
                          <div class="CopyFormUrlBlock__button"><svg xmlns="http://www.w3.org/2000/svg" fill="none"
                              viewBox="0 0 21 21">
                              <path
                                d="M10.5 11.333a.833.833 0 1 0 0-1.666.833.833 0 0 0 0 1.666ZM10.5 5.5a.833.833 0 1 0 0-1.667.833.833 0 0 0 0 1.667ZM10.5 17.167a.833.833 0 1 0 0-1.667.833.833 0 0 0 0 1.667Z"
                                stroke="#999" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                            </svg>
                          </div>
                          <div>

                          </div>
                        </div> -->
                        </div>
                      </div>
                      <div class="OrderForm__body">
                        <form id="assignmentForm" action="/submit" method="POST" enctype="multipart/form-data">

                          <div class="OrderForm__form">
                            <div class="OrderFormContent">
                              <div class="rc-ui-blocker rc-ui-blocker--size-m rc-ui-blocker--transparency-soft">
                                <div data-orientation="vertical">
                                  <div data-state="open" data-orientation="vertical" class="Step">
                                    <button type="button" aria-controls="radix-:r3:" aria-expanded="true"
                                      data-state="open" data-orientation="vertical" id="radix-:r2:"
                                      class="Step__header Step__header--success Step__header--collapsible">
                                      <div class="Step__icon">
                                        <div class="StepIcon StepIcon--active">
                                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                                            width="24" height="24">
                                            <circle cx="12" cy="12" r="12"></circle>
                                            <text x="12" y="13" text-anchor="middle"
                                              alignment-baseline="middle">1</text>
                                          </svg>
                                        </div>
                                      </div>
                                      <div class="Step__header-content">
                                        <div class="Step__title">Assignment type</div>
                                      </div>
                                      <div class="Step__arrow">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 5 10">
                                          <path d="M.167 9.583 4.75 5 .167.417v9.166Z" fill="#333"></path>
                                        </svg>
                                      </div>
                                    </button>

                                    <div data-state="open" id="radix-:r3:" role="region" aria-labelledby="radix-:r2:"
                                      data-orientation="vertical" class="Step__body"
                                      style="--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width); --radix-collapsible-content-height: 369px; --radix-collapsible-content-width: 434.65625px;">
                                      <label for="">Type of Assignment</label>
                                      <select id="assignmentType" name="assignmentType" required>
                                        <option value="">Select Assignment Type</option>
                                        <option value="English Writing Based Assignments">English Writing Based
                                          Assignments
                                        </option>
                                        <option value="Research Paper (Thesis)">Research Paper (Thesis)</option>
                                        <option value="FYP Based">FYP Based</option>
                                        <option value="All Types of Presentations">All Types of Presentations</option>
                                        <option value="App Development">App Development</option>
                                        <option value="Game Development">Game Development</option>
                                        <option value="Web Development">Web Development</option>
                                        <option value="Content Writing for Any Platform">Content Writing for Any
                                          Platform
                                        </option>
                                        <option value="Research">Research</option>
                                        <option value="Semester/Term Project">Semester/Term Project</option>
                                        <option value="Professional Web App">Professional Web App</option>
                                        <option value="Technical Report">Technical Report</option>
                                        <option value="Lab Report">Lab Report</option>
                                        <option value="Case Study">Case Study</option>
                                        <option value="Mathematics/Physics Based Assignments">Mathematics/Physics Based
                                          Assignments</option>
                                        <option value="Programming Tutoring">Programming Tutoring</option>
                                        <option value="All Types of Programming Assignments">All Types of Programming
                                          Assignments</option>
                                        <option value="Article">Article</option>
                                        <option value="Review Paper">Review Paper</option>
                                        <option value="Creative Writing">Creative Writing</option>
                                      </select>

                                      <div class="StepRow StepRow--m">
                                      </div>
                                    </div>
                                  </div>
                                  <div data-state="open" data-orientation="vertical" class="Step"><button type="button"
                                      aria-controls="radix-:re:" aria-expanded="true" data-state="open"
                                      data-orientation="vertical" id="radix-:rd:"
                                      class="Step__header Step__header--success Step__header--collapsible"
                                      data-radix-collection-item="">
                                      <div class="Step__icon">
                                        <div class="StepIcon StepIcon--active"><svg xmlns="http://www.w3.org/2000/svg"
                                            fill="none" viewBox="0 0 24 24" width="24" height="24">
                                            <circle cx="12" cy="12" r="12"></circle><text x="12" y="13"
                                              text-anchor="middle" alignment-baseline="middle">2</text>
                                          </svg></div>
                                      </div>
                                      <div class="Step__header-content">
                                        <div class="Step__title">Deadline</div>
                                        <div class="Step__subtitle">When do you need your assignment ready? Choose your
                                          delivery option.</div>
                                      </div>
                                      <div class="Step__arrow"><svg xmlns="http://www.w3.org/2000/svg" fill="none"
                                          viewBox="0 0 5 10">
                                          <path d="M.167 9.583 4.75 5 .167.417v9.166Z" fill="#333"></path>
                                        </svg></div>
                                    </button>
                                    <div data-state="open" id="radix-:re:" role="region" aria-labelledby="radix-:rd:"
                                      data-orientation="vertical" class="Step__body"
                                      style="--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width); --radix-collapsible-content-height: 146px; --radix-collapsible-content-width: 519px;">
                                      <div class="form-group-deadline">
                                        <label for="exactDeadline">Exact Deadline:</label><br>
                                        <input type="datetime-local" id="exactDeadline" name="exactDeadline"
                                          required="">
                                      </div>

                                    </div>
                                  </div>


                                  <div data-state="open" data-orientation="vertical" class="Step"><button type="button"
                                      aria-controls="radix-:ro:" aria-expanded="true" data-state="open"
                                      data-orientation="vertical" id="radix-:rn:"
                                      class="Step__header Step__header--collapsible" data-radix-collection-item="">
                                      <div class="Step__icon">
                                        <div class="StepIcon StepIcon--active"><svg xmlns="http://www.w3.org/2000/svg"
                                            fill="none" viewBox="0 0 24 24" width="24" height="24">
                                            <circle cx="12" cy="12" r="12"></circle><text x="12" y="13"
                                              text-anchor="middle" alignment-baseline="middle">3</text>
                                          </svg></div>
                                      </div>
                                      <div class="Step__header-content">
                                        <div class="Step__title">Requirements</div>
                                        <div class="Step__subtitle">Tell us what kind of assignment you need</div>
                                      </div>
                                      <div class="Step__arrow"><svg xmlns="http://www.w3.org/2000/svg" fill="none"
                                          viewBox="0 0 5 10">
                                          <path d="M.167 9.583 4.75 5 .167.417v9.166Z" fill="#333"></path>
                                        </svg></div>
                                    </button>
                                    <div data-state="open" id="radix-:ro:" role="region" aria-labelledby="radix-:rn:"
                                      data-orientation="vertical" class="Step__body"
                                      style="--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width); --radix-collapsible-content-height: 619.65625px; --radix-collapsible-content-width: 519px;">
                                      <div class="StepRow StepRow--s">
                                        <div class="Label Label--with-margin-bottom">
                                          <div class="Label__title">Your Email</div>
                                        </div>
                                        <div class="rc-validation-representer valid" data-invalid="false">
                                          <input type="email" id="studentEmail" name="email"
                                            placeholder="Enter your email" required="">
                                        </div>
                                      </div>
                                      <div class="StepRow StepRow--s">
                                        <div class="Label Label--with-margin-bottom">
                                          <div class="Label__title">WhatsApp Number (optional)</div>
                                        </div>
                                        <div class="rc-validation-representer2 valid" data-invalid="false">
                                          <input id="whatsapp" type="text" name="whatsapp" />
                                        </div>
                                      </div>
                                      <div style="padding-top: 8px;"></div>
                                      <div class="StepRow StepRow--s">
                                        <div class="Label__title">Google Drive File Link (Optional):</div>
                                        <div class="rc-validation-representer valid" data-invalid="false">
                                          <input type="text" id="fileUploads" name="fileUploads">
                                        </div>
                                      </div>
                                      <div class="StepRow StepRow--s">
                                        <div class="rc-validation-representer valid" data-invalid="false">
                                          <div class="form-group">
                                            <label for="vivaPreparation">Need Viva Preparation?</label>

                                            <select id="vivaPreparation" name="vivaPreparation"
                                              data-gtm-form-interact-field-id="1">
                                              <option value="no">No</option>
                                              <option value="yes">Yes (15% increase in price)
                                                [We will contact you for the timings]
                                              </option>
                                            </select>


                                            <div id="vivaTiming" class="hidden">
                                              <label for="vivaTimingSelect">Preferred Timing (Tentative):</label>
                                              <select id="vivaTimingSelect" name="vivaTimingSelect" class="hidden">
                                                <option value="3-4">3-4 PM</option>
                                                <option value="4-5">4-5 PM</option>
                                                <option value="5-6">5-6 PM</option>
                                                <option value="5-6">Will decide later upon availability</option>
                                              </select>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      <div class="StepRow StepRow--s">
                                        <div class="Label Label--with-margin-bottom">
                                          <div class="Label__title">
                                            <div class="InstructionsLabel__title">Instructions <button aria-label="Info"
                                                class="InstructionsLabel__button" type="button"></button></div>
                                          </div>
                                        </div>
                                        <div class="InstructionsControl"><textarea
                                            class="InstructionsControl__input UIInput UIInput-default UIInput-default--type-textarea UIInput-default--size-m UIInput-default--color-default UIInput-default--autosize UIInput-default--not-resizable"
                                            placeholder="• Write what's important for the expert to consider to meet your expectations. 
• Mention the software or programming environment to be used, upload data sets, grading scale, etc.
• Attach tables or charts as files; they can't be pasted here." tabindex="0"
                                            style="overflow: hidden; overflow-wrap: break-word; height: 164px; text-align: center;"></textarea>
                                          <div
                                            class="rc-ui-blocker rc-ui-blocker--size-m rc-ui-blocker--transparency-soft">
                                            <div class="rc-files-control InstructionsControl__files"
                                              data-testid="filesControl">
                                              <div>
                                                <div class="rc-files-control--files" id="fileList"></div>
                                                <div class="dropzone-description">
                                                  <div class="personal-data-warning">It's compulsory to upload the assignment/task/project requirements file/files.
                                                  </div>
                                                  <button id="browseButton"
                                                    class="browse-button UIButton UIButton-default-light UIButton-default-light--size-m UIButton-default-light--color-primary"
                                                    type="button">
                                                    Browse
                                                  </button>

                                                  <input id="fileInput" multiple type="file"
                                                    class="UIInput UIInput-default UIInput-default--type-file UIInput-default--size-m UIInput-default--color-default UIInput-default--oneline"
                                                    name="file" tabindex="0" accept="*/*" required style="display: none;">
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                        <div class="StepRow StepRow--s">
                                          <label
                                            class="UICheckbox UICheckbox--theme-default OrderFormOnlyOwnCodeSolutionControl OrderFormCheckboxControl"
                                            for="noOpenSource">
                                            <input type="checkbox"
                                              class="UICheckbox__checkbox UICheckbox__checkbox--theme-default UICheckbox__checkbox--native"
                                              id="noOpenSource" name="noOpenSource" style="display: none;">

                                            <div
                                              class="UICheckbox__checkbox UICheckbox__checkbox--theme-default UICheckbox__checkbox--faux"
                                              tabindex="0"></div>

                                            <div class="UICheckbox__label UICheckbox__label--theme-default"
                                              for="cac3c0a5da2bc">
                                              <div class="OrderFormOnlyOwnCodeSolutionControl__label">No open-source or
                                                ready-made code is allowed in this task</div>
                                            </div>
                                          </label>
                                        </div>

                                        <div class="StepRow StepRow--m"></div>
                                      </div>
                                    </div>
                                  </div>
                                  <div data-state="open" data-orientation="vertical" class="Step"><button type="button"
                                      aria-controls="radix-:r9:" aria-expanded="true" data-state="open"
                                      data-orientation="vertical" id="radix-:r8:"
                                      class="Step__header Step__header--collapsible" data-radix-collection-item="">
                                      <div class="Step__icon">
                                        <div class="StepIcon StepIcon--active"><svg xmlns="http://www.w3.org/2000/svg"
                                            fill="none" viewBox="0 0 24 24" width="24" height="24">
                                            <circle cx="12" cy="12" r="12"></circle><text x="12" y="13"
                                              text-anchor="middle" alignment-baseline="middle">4</text>
                                          </svg></div>
                                      </div>
                                      <div class="Step__header-content">
                                        <div class="Step__title">Task size</div>
                                        <div class="Step__subtitle">Specify the complexity of your assignment</div>
                                      </div>
                                      <div class="Step__arrow"><svg xmlns="http://www.w3.org/2000/svg" fill="none"
                                          viewBox="0 0 5 10">
                                          <path d="M.167 9.583 4.75 5 .167.417v9.166Z" fill="#333"></path>
                                        </svg></div>
                                    </button>
                                    <div data-state="open" id="radix-:r9:" role="region" aria-labelledby="radix-:r8:"
                                      data-orientation="vertical" class="Step__body"
                                      style="--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width); --radix-collapsible-content-height: 298.046875px; --radix-collapsible-content-width: 618.65625px;">
                                      <div class="StepRow StepRow--s">
                                        <div
                                          class="rc-validation-representer TaskSizeControl TaskSizeControlForCalculation valid"
                                          data-invalid="false">
                                          <div class="rc-radios rc-radios--theme-default vertical-on-small">
                                            <div class="radio-button-wrapper radio-button-wrapper--flexbuttons"><button
                                                type="button" class="radio-button radio-button--n-5" tabindex="0"
                                                data-testid="radio-button">
                                                <div class="button-checkbox"></div>
                                                <div class="radio-button__main-content-wrapper">
                                                  <div class="radio-button__title">Extra small</div>
                                                </div>
                                              </button></div>
                                            <div class="radio-button-wrapper radio-button-wrapper--flexbuttons"><button
                                                type="button" class="radio-button radio-button--n-1" tabindex="0"
                                                data-testid="radio-button">
                                                <div class="button-checkbox"></div>
                                                <div class="radio-button__main-content-wrapper">
                                                  <div class="radio-button__title">Small</div>
                                                </div>
                                              </button></div>
                                            <div class="radio-button-wrapper radio-button-wrapper--flexbuttons"><button
                                                type="button" class="radio-button radio-button--n-2" tabindex="0"
                                                data-testid="radio-button">
                                                <div class="button-checkbox"></div>
                                                <div class="radio-button__main-content-wrapper">
                                                  <div class="radio-button__title">Medium</div>
                                                </div>
                                              </button></div>
                                            <div class="radio-button-wrapper radio-button-wrapper--flexbuttons"><button
                                                type="button" class="radio-button radio-button--n-3 active"
                                                tabindex="-1" data-testid="radio-button">
                                                <div class="button-checkbox"></div>
                                                <div class="radio-button__main-content-wrapper">
                                                  <div class="radio-button__title">Large</div>
                                                </div>
                                              </button></div>
                                          </div>
                                          <div class="TaskSizeControl__descriptors">
                                            <div class="TaskSizeControl__descriptors__example">
                                              <div class="TaskSizeControl__descriptors__title">Example:</div>
                                              <div class="TaskSizeControl__descriptors__body">moderately complex problem
                                                analysis project (using applied math methods)</div>
                                            </div>
                                            <div class="TaskSizeControl__descriptors__deliverables">
                                              <div class="TaskSizeControl__descriptors__title">Possible deliverables:
                                              </div>
                                              <ul class="TaskSizeControl__deliverables">
                                                <li
                                                  class="TaskSizeControl__deliverables__item TaskSizeControl__deliverables__item--computations">
                                                  Computations</li>
                                                <li
                                                  class="TaskSizeControl__deliverables__item TaskSizeControl__deliverables__item--charts-and-diagrams">
                                                  Charts and diagrams</li>
                                                <li
                                                  class="TaskSizeControl__deliverables__item TaskSizeControl__deliverables__item--detailed-report">
                                                  Detailed report</li>
                                                <li
                                                  class="TaskSizeControl__deliverables__item TaskSizeControl__deliverables__item--presentation">
                                                  Presentation</li>
                                              </ul>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      <div class="StepRow StepRow--m"></div>
                                    </div>
                                  </div>
                                  <div data-state="open" data-orientation="vertical" class="Step"><button type="button"
                                      aria-controls="radix-:rb:" aria-expanded="true" data-state="open"
                                      data-orientation="vertical" id="radix-:ra:"
                                      class="Step__header Step__header--success Step__header--collapsible"
                                      data-radix-collection-item="">
                                      <div class="Step__icon">
                                        <div class="StepIcon StepIcon--active"><svg xmlns="http://www.w3.org/2000/svg"
                                            fill="none" viewBox="0 0 24 24" width="24" height="24">
                                            <circle cx="12" cy="12" r="12"></circle><text x="12" y="13"
                                              text-anchor="middle" alignment-baseline="middle">5</text>
                                          </svg></div>
                                      </div>
                                      <div class="Step__header-content">
                                        <div class="Step__title">Extras</div>
                                        <div class="Step__subtitle">Add any extra services to enrich your assignment
                                        </div>
                                      </div>
                                      <div class="Step__arrow"><svg xmlns="http://www.w3.org/2000/svg" fill="none"
                                          viewBox="0 0 5 10">
                                          <path d="M.167 9.583 4.75 5 .167.417v9.166Z" fill="#333"></path>
                                        </svg></div>
                                    </button>
                                    <div data-state="open" id="radix-:rb:" role="region" aria-labelledby="radix-:ra:"
                                      data-orientation="vertical" class="Step__body"
                                      style="--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width); --radix-collapsible-content-height: 266px; --radix-collapsible-content-width: 519px;">
                                      <div class="StepRow StepRow--s">
                                        <div>
                                          <label class="UICheckbox UICheckbox--theme-boxed" for="topProgrammer">
                                            <input type="checkbox"
                                              class="UICheckbox__checkbox UICheckbox__checkbox--theme-boxed UICheckbox__checkbox--native"
                                              id="topProgrammer" name="topProgrammer">
                                            <div
                                              class="UICheckbox__checkbox UICheckbox__checkbox--theme-boxed UICheckbox__checkbox--faux"
                                              tabindex="0"></div>
                                            <div class="UICheckbox__label UICheckbox__label--theme-boxed"
                                              for="checkbox1">
                                              <h3>Top programming level</h3>
                                              <p>We assign top expert for your task</p>
                                            </div>
                                          </label>
                                        </div>
                                      </div>
                                      <div class="StepRow StepRow--s">
                                        <div>
                                          <label class="UICheckbox UICheckbox--theme-boxed" for="wellCommentedCode">
                                            <input type="checkbox"
                                              class="UICheckbox__checkbox UICheckbox__checkbox--theme-boxed UICheckbox__checkbox--native"
                                              id="wellCommentedCode" name="wellCommentedCode">
                                            <div
                                              class="UICheckbox__checkbox UICheckbox__checkbox--theme-boxed UICheckbox__checkbox--faux"
                                              tabindex="0"></div>
                                            <div class="UICheckbox__label UICheckbox__label--theme-boxed"
                                              for="checkbox2">
                                              <h3>Well-commented code</h3>
                                              <p>You get all methods and functions in your code commented.</p>
                                            </div>
                                          </label>
                                        </div>
                                      </div>

                                    </div>
                                  </div>
                                  <div data-state="open" data-orientation="vertical" data-testid="Step-summary"
                                    class="Step"><button type="button" aria-controls="radix-:rd:" aria-expanded="true"
                                      data-state="open" data-orientation="vertical" id="radix-:rc:"
                                      class="Step__header Step__header--success Step__header--collapsible"
                                      data-radix-collection-item="">
                                      <div class="Step__icon">
                                        <div class="StepIcon StepIcon--active"><svg xmlns="http://www.w3.org/2000/svg"
                                            fill="none" viewBox="0 0 15 18" width="15" height="18">
                                            <path
                                              d="m7.36 2.5.4 2H13v6H9.64l-.4-2H2v-6h5.36ZM9 .5H0v17h2v-7h5.6l.4 2h7v-10H9.4L9 .5Z">
                                            </path>
                                          </svg></div>
                                      </div>
                                      <div class="Step__header-content">
                                        <div class="Step__title">Summary</div>
                                        <div class="Step__subtitle">Review your order and make sure it meets your
                                          requirements</div>
                                      </div>
                                      <div class="Step__arrow"><svg xmlns="http://www.w3.org/2000/svg" fill="none"
                                          viewBox="0 0 5 10">
                                          <path d="M.167 9.583 4.75 5 .167.417v9.166Z" fill="#333"></path>
                                        </svg></div>
                                    </button>
                                    <div data-state="open" id="radix-:rd:" role="region" aria-labelledby="radix-:rc:"
                                      data-orientation="vertical" class="Step__body"
                                      style="--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width); --radix-collapsible-content-height: 353px; --radix-collapsible-content-width: 519px;">
                                      <div class="StepRow StepRow--s">
                                        <div class="Invoice" data-testid="Invoice">
                                          <div class="Invoice__row Invoice__row--total-price">
                                            <div class="Invoice__label">Total price</div>
                                            <div class="Invoice__price-wrapper">
                                              <div class="Invoice__value Invoice__value--accent"
                                                data-testid="Invoice-totalPrice">
                                                <span id="totalPrice">$0.00</span>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>

                                      <div class="StepRow StepRow--m">
                                        <button
                                          class="Step__btn Step__btn--done UIButton UIButton-default-filled UIButton-default-filled--size-l UIButton-default-filled--color-primary"
                                          type="submit" id="submit-btn">Submit
                                        </button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </form>


                        <div class="OrderForm__sidebar">
                          <div class="OrderFormSidebar">
                            <div class="OrderFormNotifications">
                              <div data-state="open" class="NotificationCard NotificationCard--warning"><button
                                  type="button" class="NotificationCard__title NotificationCard__title--warning">No
                                  instructions or files added</button>
                                <div data-state="open" id="radix-:r12:" class="NotificationCard__content"
                                  style="transition-duration: 0s; animation-name: none; --radix-collapsible-content-height: 134.140625px; --radix-collapsible-content-width: 193.328125px;">
                                  <div class="NotificationCard__text">Provide instructions or upload files to let us
                                    create an assignment you would love ❤️</div>

                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="rc-root-layout-footer">
              <!-- <footer class="mini-auth-page__footer">
              <div class="mini-auth-page__footer__links"><a rel="nofollow noopener noreferrer" target="_blank"
                  href="/cookie-policy.html" class="mini-auth-page__footer__link">Cookie Policy</a><a
                  rel="nofollow noopener noreferrer" target="_blank" href="/terms-conditions.html"
                  class="mini-auth-page__footer__link">Terms and Conditions</a><a rel="nofollow noopener noreferrer"
                  target="_blank" href="/money-back-guarantee.html" class="mini-auth-page__footer__link">MoneyBack
                  Policy</a><a rel="nofollow noopener noreferrer" target="_blank" href="/privacy-policy.html"
                  class="mini-auth-page__footer__link">Privacy Policy</a><a rel="nofollow noopener noreferrer"
                  target="_blank" href="/social_responsibility_notice.html" class="mini-auth-page__footer__link">Social
                  Responsibility Policy</a></div>
              <div class="mini-auth-page__footer__copyrights">© 2014—2024 Writera Limited, Vasili Michalidi, 9, 3026,
                Limassol, Cyprus. Registration number ΗΕ 406826. All Rights Reserved.</div>
            </footer> -->

              <%- include("../partials/footer.ejs") %>

            </div>
          </div>
        </div>
      </div>
      </div>

      <script src="/assets/get_rcapp/?containerNode=root&amp;basename=dashboard&amp;useRouter=1&amp;app=full-app"
        async=""></script>

      <script>
        window.addEventListener('userLoggedIn', function () {
          var body = document.getElementsByTagName('body')[0];
          var scriptEl = document.createElement('script');
          scriptEl.async = true;
          scriptEl.src = "/js/communication-panel.e37a541cabfea50ba1a5.js";
          body.appendChild(scriptEl);
        });
      </script>


      <script src="/js/cookie-dialog.bcf194b3a41f3dcdf706.js" async=""></script>

      <script>!function (a) { "use strict"; var b = function (b, c, d) { function e(a) { return h.body ? a() : void setTimeout(function () { e(a) }) } function f() { i.addEventListener && i.removeEventListener("load", f), i.media = d || "all" } var g, h = a.document, i = h.createElement("link"); if (c) g = c; else { var j = (h.body || h.getElementsByTagName("head")[0]).childNodes; g = j[j.length - 1] } var k = h.styleSheets; i.rel = "stylesheet", i.href = b, i.media = "only x", e(function () { g.parentNode.insertBefore(i, c ? g : g.nextSibling) }); var l = function (a) { for (var b = i.href, c = k.length; c--;)if (k[c].href === b) return a(); setTimeout(function () { l(a) }) }; return i.addEventListener && i.addEventListener("load", f), i.onloadcssdefined = l, l(f), i }; "undefined" != typeof exports ? exports.loadCSS = b : a.loadCSS = b }("undefined" != typeof global ? global : this); !function (a) { if (a.loadCSS) { var b = loadCSS.relpreload = {}; if (b.support = function () { try { return a.document.createElement("link").relList.supports("preload") } catch (b) { return !1 } }, b.poly = function () { for (var b = a.document.getElementsByTagName("link"), c = 0; c < b.length; c++) { var d = b[c]; "preload" === d.rel && "style" === d.getAttribute("as") && (a.loadCSS(d.href, d, d.getAttribute("media")), d.rel = null) } }, !b.support()) { b.poly(); var c = a.setInterval(b.poly, 300); a.addEventListener && a.addEventListener("load", function () { b.poly(), a.clearInterval(c) }), a.attachEvent && a.attachEvent("onload", function () { a.clearInterval(c) }) } } }(this);</script>


      <script src="/assets/cookie-policy/cookie-policy-widget.js" async=""></script>
      <div></div>
      <div>
        <div class="GlobalComponent">
          <div class="Notifications">
            <div class="Notifications__wrapper"></div>
          </div>
          <div></div>
        </div>
      </div>
      <script type="text/javascript" id=""
        charset="">!function (b, e, f, g, a, c, d) { b.fbq || (a = b.fbq = function () { a.callMethod ? a.callMethod.apply(a, arguments) : a.queue.push(arguments) }, b._fbq || (b._fbq = a), a.push = a, a.loaded = !0, a.version = "2.0", a.queue = [], c = e.createElement(f), c.async = !0, c.src = g, d = e.getElementsByTagName(f)[0], d.parentNode.insertBefore(c, d)) }(window, document, "script", "https://connect.facebook.net/en_US/fbevents.js"); fbq("init", "438135889695452");</script>
      <script type="text/javascript" id=""
        charset="">(function (a, e, b, f, g, c, d) { a[b] = a[b] || function () { (a[b].q = a[b].q || []).push(arguments) }; c = e.createElement(f); c.async = 1; c.src = "https://www.clarity.ms/tag/" + g + "?ref\x3dgtm2"; d = e.getElementsByTagName(f)[0]; d.parentNode.insertBefore(c, d) })(window, document, "clarity", "script", "g5hk9hdqb9");</script>
      <div>
        <div></div>
      </div>
      <script type="text/javascript" id="" charset="">fbq("track", "PageView");</script>
      <script>
        function setActive(button) {
          // Remove 'active' class from all buttons
          const buttons = document.querySelectorAll('.radio-button');
          buttons.forEach(btn => btn.classList.remove('active'));

          // Add 'active' class to the clicked button
          button.classList.add('active');
        }

        // Get the header button, body content, and the arrow SVG
        document.addEventListener('DOMContentLoaded', function () {
          const accordionHeaders = document.querySelectorAll('.Step__header');

          // Set default state of all accordion bodies to "closed"
          accordionHeaders.forEach(accordionHeader => {
            const accordionBody = accordionHeader.nextElementSibling; // Assuming the body comes directly after the header
            const arrowIcon = accordionHeader.querySelector('.Step__arrow svg');

            accordionHeader.setAttribute('data-state', 'closed');
            accordionHeader.setAttribute('aria-expanded', 'false');
            accordionBody.setAttribute('data-state', 'closed');
            accordionBody.style.display = 'none';  // Hide all accordion bodies by default
            arrowIcon.style.transform = 'rotate(0deg)';  // Ensure all arrows are in the default position
          });

          accordionHeaders.forEach(accordionHeader => {
            accordionHeader.addEventListener('click', function () {
              // Check if the current accordion is open
              const isOpen = accordionHeader.getAttribute('data-state') === 'open';

              // Close all accordion sections before opening the current one
              accordionHeaders.forEach(header => {
                const body = header.nextElementSibling;
                const arrowIcon = header.querySelector('.Step__arrow svg');

                // Close other open accordions
                header.setAttribute('data-state', 'closed');
                header.setAttribute('aria-expanded', 'false');
                body.setAttribute('data-state', 'closed');
                body.style.display = 'none';
                arrowIcon.style.transform = 'rotate(0deg)';
              });

              // If the clicked accordion was not open, open it
              if (!isOpen) {
                const accordionBody = accordionHeader.nextElementSibling; // Assuming the body comes directly after the header
                const arrowIcon = accordionHeader.querySelector('.Step__arrow svg');

                accordionHeader.setAttribute('data-state', 'open');
                accordionBody.setAttribute('data-state', 'open');
                accordionHeader.setAttribute('aria-expanded', 'true');
                accordionBody.style.display = 'block';
                arrowIcon.style.transform = 'rotate(90deg)';
                arrowIcon.style.transition = 'transform 0.3s ease';
              }
            });
          });
        });
      </script>


      <script>
        const fileInput = document.getElementById('fileInput');
        const browseButton = document.getElementById('browseButton');
        const dropzone = document.getElementById('dropzone');
        const fileList = document.getElementById('fileList');

        // Trigger file input when "Browse" button is clicked
        browseButton.addEventListener('click', function () {
          fileInput.click();
        });

        // Display selected files
        fileInput.addEventListener('change', function (event) {
          handleFiles(event.target.files);
        });

        // Handle file drop
        dropzone.addEventListener('dragover', function (event) {
          event.preventDefault();
          dropzone.classList.add('highlight'); // Optional: highlight drop area
        });

        dropzone.addEventListener('dragleave', function () {
          dropzone.classList.remove('highlight'); // Optional: remove highlight
        });

        dropzone.addEventListener('drop', function (event) {
          event.preventDefault();
          dropzone.classList.remove('highlight');
          handleFiles(event.dataTransfer.files);
        });

        // Function to handle file display
        function handleFiles(files) {
          fileList.innerHTML = ''; // Clear the list before showing new files
          for (const file of files) {
            const listItem = document.createElement('div');
            listItem.textContent = file.name;
            fileList.appendChild(listItem);
          }
        }
      </script>
      <!-- <script>
      const fauxCheckbox = document.querySelector('.UICheckbox__checkbox--faux');
      const nativeCheckbox = document.getElementById('customCheckbox');

      // Toggle checked state and tick on click
      fauxCheckbox.addEventListener('click', function () {
        nativeCheckbox.checked = !nativeCheckbox.checked;
        fauxCheckbox.classList.toggle('UICheckbox__checkbox--checked');
      }); -->

      </script>
      <!-- <script>
      // Event listener for the first step (Assignment type)
      document.getElementById("radix-:r2:").addEventListener("click", function () {
        const selectField = document.getElementById("assignmentType");
        const stepIcon = this.querySelector(".StepIcon");  // Target the container of the current icon
        const isExpanded = this.getAttribute("aria-expanded") === "true";

        // Toggle expanded state
        if (isExpanded) {
          this.setAttribute("aria-expanded", "false");
        } else {
          this.setAttribute("aria-expanded", "true");
        }

        // Check if the field is valid (not empty) and the accordion is closed
        if (selectField.value === "" && !isExpanded) {
          // Show warning sign in yellow color
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20">
                                  <path d="M9 13h2v2H9v-2Zm0-8h2v6H9V5Zm.99-5C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0ZM10 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8Z"></path>
                              </svg>`;
          stepIcon.classList.add('StepIcon--warning');
          stepIcon.classList.remove('StepIcon--success');
        } else if (selectField.value !== "") {
          // Show tick without background
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
          stepIcon.classList.remove('StepIcon--warning');
          stepIcon.classList.add('StepIcon--success');
        }
      });

      // Event listener for the assignmentType field on change
      document.getElementById("assignmentType").addEventListener("change", function () {
        const stepIcon = document.getElementById("radix-:r2:").querySelector(".StepIcon");

        if (this.value !== "") {
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
          stepIcon.classList.remove('StepIcon--warning');
          stepIcon.classList.add('StepIcon--success');
        }
      });

      // Event listener for the second step (Deadline)
      document.getElementById("radix-:rd:").addEventListener("click", function () {
        const deadlineField = document.getElementById("exactDeadline");
        const stepIcon = this.querySelector(".StepIcon");  // Target the container of the current icon
        const isExpanded = this.getAttribute("aria-expanded") === "true";

        // Toggle expanded state
        if (isExpanded) {
          this.setAttribute("aria-expanded", "false");
        } else {
          this.setAttribute("aria-expanded", "true");
        }

        // Check if the deadline field is valid (not empty) and the accordion is closed
        if (deadlineField.value === "" && !isExpanded) {
          // Show warning sign in yellow color
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20">
                                  <path d="M9 13h2v2H9v-2Zm0-8h2v6H9V5Zm.99-5C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0ZM10 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8Z"></path>
                              </svg>`;
          stepIcon.classList.add('StepIcon--warning');
          stepIcon.classList.remove('StepIcon--success');
        } else if (deadlineField.value !== "") {
          // Show tick without background
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
          stepIcon.classList.remove('StepIcon--warning');
          stepIcon.classList.add('StepIcon--success');
        }
      });

      // Event listener for the exactDeadline field on change
      document.getElementById("exactDeadline").addEventListener("change", function () {
        const stepIcon = document.getElementById("radix-:rd:").querySelector(".StepIcon");

        if (this.value !== "") {
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
          stepIcon.classList.remove('StepIcon--warning');
          stepIcon.classList.add('StepIcon--success');
        }
      });

    </script> -->

      <script>
        document.addEventListener("DOMContentLoaded", function () {
          // Define task size examples and deliverables
          const taskSizes = {
            "Extra small": {
              example: "Up to 3 short practice problems or theoretical questions",
              deliverables: ["Simple computations", "Short answers to questions"],
            },
            Small: {
              example: "Up to 7 short practice problems or theoretical questions",
              deliverables: [
                "Simple computations",
                "Simple charts and diagrams",
                "Short answers to questions",
              ],
            },
            Medium: {
              example: "Up to 15 practice problems or theoretical questions",
              deliverables: [
                "Computations",
                "Charts and diagrams",
                "Detailed explanations",
              ],
            },
            Large: {
              example: "Moderately complex problem analysis project (using applied math methods)",
              deliverables: [
                "Computations",
                "Charts and diagrams",
                "Detailed report",
                "Presentation",
              ],
            },
          };

          // Get all task size buttons
          const buttons = document.querySelectorAll(".radio-button");

          // Get elements where example and deliverables are displayed
          const exampleElement = document.querySelector(".TaskSizeControl__descriptors__example .TaskSizeControl__descriptors__body");
          const deliverablesElement = document.querySelector(".TaskSizeControl__deliverables");

          // Function to update the content
          function updateContent(taskSize) {
            // Update example
            exampleElement.textContent = taskSize.example;

            // Update deliverables
            deliverablesElement.innerHTML = ""; // Clear previous deliverables
            taskSize.deliverables.forEach((deliverable) => {
              const li = document.createElement("li");
              li.classList.add("TaskSizeControl__deliverables__item");
              li.textContent = deliverable;
              deliverablesElement.appendChild(li);
            });
          }

          // Add click event listener to each button
          buttons.forEach((button) => {
            button.addEventListener("click", function () {
              // Remove 'active' class from all buttons
              buttons.forEach((btn) => btn.classList.remove("active"));

              // Add 'active' class to the clicked button
              this.classList.add("active");

              // Get task size from the button title
              const taskSizeTitle = this.querySelector(".radio-button__title").textContent;

              // Update content based on selected task size
              if (taskSizes[taskSizeTitle]) {
                updateContent(taskSizes[taskSizeTitle]);
              }
            });
          });

          // Set initial content for the active button
          const activeButton = document.querySelector(".radio-button--n-3.active");
          const activeTaskSizeTitle = activeButton.querySelector(".radio-button__title").textContent;
          updateContent(taskSizes[activeTaskSizeTitle]);
        });
      </script>

      <!-- <script>
      // Event listener for the first step (Assignment type)
      document.getElementById("radix-:r2:").addEventListener("click", function () {
        const selectField = document.getElementById("assignmentType");
        const stepIcon = this.querySelector(".StepIcon");
        const isExpanded = this.getAttribute("aria-expanded") === "true";

        if (isExpanded) {
          this.setAttribute("aria-expanded", "false");
        } else {
          this.setAttribute("aria-expanded", "true");
        }

        if (selectField.value === "" && !isExpanded) {
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20">
                                  <path d="M9 13h2v2H9v-2Zm0-8h2v6H9V5Zm.99-5C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0ZM10 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8Z"></path>
                              </svg>`;
          stepIcon.classList.add('StepIcon--warning');
          stepIcon.classList.remove('StepIcon--success');
        } else if (selectField.value !== "") {
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
          stepIcon.classList.remove('StepIcon--warning');
          stepIcon.classList.add('StepIcon--success');
        }
      });

      // Event listener for the exactDeadline field
      document.getElementById("exactDeadline").addEventListener("change", function () {
        const stepIcon = document.getElementById("radix-:rd:").querySelector(".StepIcon");

        if (this.value !== "") {
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
          stepIcon.classList.remove('StepIcon--warning');
          stepIcon.classList.add('StepIcon--success');
        }
      });

      // Event listener for the third step (Task size)
      document.getElementById("radix-:r8:").addEventListener("click", function () {
        const radioButtons = document.querySelectorAll('.radio-button-wrapper .radio-button');
        const stepIcon = this.querySelector(".StepIcon");
        const isExpanded = this.getAttribute("aria-expanded") === "true";
        let isSelected = false;

        // Check if any radio button is selected
        radioButtons.forEach(button => {
          if (button.classList.contains('active')) {
            isSelected = true;
          }
        });

        if (isExpanded) {
          this.setAttribute("aria-expanded", "false");
        } else {
          this.setAttribute("aria-expanded", "true");
        }

        if (!isSelected && !isExpanded) {
          // Show warning if no task size is selected
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20">
                                  <path d="M9 13h2v2H9v-2Zm0-8h2v6H9V5Zm.99-5C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0ZM10 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8Z"></path>
                              </svg>`;
          stepIcon.classList.add('StepIcon--warning');
          stepIcon.classList.remove('StepIcon--success');
        } else if (isSelected) {
          // Show success if a valid selection is made
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
          stepIcon.classList.remove('StepIcon--warning');
          stepIcon.classList.add('StepIcon--success');
        }
      });

      // Event listener for radio button selection
      document.querySelectorAll('.radio-button-wrapper .radio-button').forEach(button => {
        button.addEventListener('click', function () {
          const stepIcon = document.getElementById("radix-:r8:").querySelector(".StepIcon");

          // Remove 'active' class from other buttons and add to the clicked button
          document.querySelectorAll('.radio-button-wrapper .radio-button').forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');

          // Show success icon
          stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
          stepIcon.classList.remove('StepIcon--warning');
          stepIcon.classList.add('StepIcon--success');
        });
      });

    </script> -->

      <script>
        // Event listener for the second step (Deadline)
        document.getElementById("radix-:rd:").addEventListener("click", function () {
          const deadlineField = document.getElementById("exactDeadline");
          const stepIcon = this.querySelector(".StepIcon");  // Target the container of the current icon
          const isExpanded = this.getAttribute("aria-expanded") === "true";

          // Toggle expanded state
          if (isExpanded) {
            this.setAttribute("aria-expanded", "false");
          } else {
            this.setAttribute("aria-expanded", "true");
          }

          // Check if the deadline field is valid (not empty) and the accordion is closed
          if (deadlineField.value === "" && !isExpanded) {
            // Show warning sign in yellow color
            stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20">
                                  <path d="M9 13h2v2H9v-2Zm0-8h2v6H9V5Zm.99-5C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0ZM10 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8Z"></path>
                              </svg>`;
            stepIcon.classList.add('StepIcon--warning');
            stepIcon.classList.remove('StepIcon--success');
          } else if (deadlineField.value !== "") {
            // Show tick without background
            stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
            stepIcon.classList.remove('StepIcon--warning');
            stepIcon.classList.add('StepIcon--success');
          }
        });
        // Event listener for the first step (Assignment type)
        document.getElementById("radix-:r2:").addEventListener("click", function () {
          const selectField = document.getElementById("assignmentType");
          const stepIcon = this.querySelector(".StepIcon");
          const isExpanded = this.getAttribute("aria-expanded") === "true";

          if (isExpanded) {
            this.setAttribute("aria-expanded", "false");
          } else {
            this.setAttribute("aria-expanded", "true");
          }

          if (selectField.value === "" && !isExpanded) {
            stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20">
                                  <path d="M9 13h2v2H9v-2Zm0-8h2v6H9V5Zm.99-5C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0ZM10 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8Z"></path>
                              </svg>`;
            stepIcon.classList.add('StepIcon--warning');
            stepIcon.classList.remove('StepIcon--success');
          } else if (selectField.value !== "") {
            stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
            stepIcon.classList.remove('StepIcon--warning');
            stepIcon.classList.add('StepIcon--success');
          }
        });


        // Event listener for the third step (Task size)
        document.getElementById("radix-:r8:").addEventListener("click", function () {
          const radioButtons = document.querySelectorAll('.radio-button-wrapper .radio-button');
          const stepIcon = this.querySelector(".StepIcon");
          const isExpanded = this.getAttribute("aria-expanded") === "true";
          let isSelected = false;

          // Check if any radio button is selected
          radioButtons.forEach(button => {
            if (button.classList.contains('active')) {
              isSelected = true;
            }
          });

          if (isExpanded) {
            this.setAttribute("aria-expanded", "false");
          } else {
            this.setAttribute("aria-expanded", "true");
          }

          if (!isSelected && !isExpanded) {
            // Show warning if no task size is selected
            stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20">
                                  <path d="M9 13h2v2H9v-2Zm0-8h2v6H9V5Zm.99-5C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0ZM10 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8Z"></path>
                              </svg>`;
            stepIcon.classList.add('StepIcon--warning');
            stepIcon.classList.remove('StepIcon--success');
          } else if (isSelected) {
            // Show success if a valid selection is made
            stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
            stepIcon.classList.remove('StepIcon--warning');
            stepIcon.classList.add('StepIcon--success');
          }
        });

        // Event listener for the fourth step (Extras)
        document.getElementById("radix-:ra:").addEventListener("click", function () {
          const checkboxes = document.querySelectorAll('.UICheckbox__checkbox--native');
          const stepIcon = this.querySelector(".StepIcon");
          const isExpanded = this.getAttribute("aria-expanded") === "true";
          let isSelected = false;

          // Check if any checkbox is selected
          checkboxes.forEach(checkbox => {
            if (checkbox.checked) {
              isSelected = true;
            }
          });

          if (isExpanded) {
            this.setAttribute("aria-expanded", "false");
          } else {
            this.setAttribute("aria-expanded", "true");
          }

          if (!isSelected && !isExpanded) {
            // No selection is fine; show success icon
            stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
            stepIcon.classList.remove('StepIcon--warning');
            stepIcon.classList.add('StepIcon--success');
          } else if (isSelected) {
            // Show success if a checkbox is selected
            stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                  <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                              </svg>`;
            stepIcon.classList.remove('StepIcon--warning');
            stepIcon.classList.add('StepIcon--success');
          }
        });

        // Event listener for checkbox selection in Extras step
        document.querySelectorAll('.UICheckbox__checkbox--native').forEach(checkbox => {
          checkbox.addEventListener('change', function () {
            const stepIcon = document.getElementById("radix-:ra:").querySelector(".StepIcon");
            let isSelected = false;

            // Check if any checkbox is selected
            document.querySelectorAll('.UICheckbox__checkbox--native').forEach(cb => {
              if (cb.checked) {
                isSelected = true;
              }
            });

            if (isSelected) {
              // Show success icon
              stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                      <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                                  </svg>`;
              stepIcon.classList.remove('StepIcon--warning');
              stepIcon.classList.add('StepIcon--success');
            } else {
              // If none is selected, still show success as this step is optional
              stepIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                                      <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
                                  </svg>`;
              stepIcon.classList.remove('StepIcon--warning');
              stepIcon.classList.add('StepIcon--success');
            }
          });
        });

      </script>
      <script>

        // Event listener for the Requirement step
        document.getElementById("radix-:rn:").addEventListener("click", function () {
          const emailField = document.getElementById("studentEmail");
          const vivaPreparationField = document.getElementById("vivaPreparation");
          const fileList = document.getElementById("fileList");
          const stepIcon = this.querySelector(".StepIcon");  // Target the container of the current icon
          const isExpanded = this.getAttribute("aria-expanded") === "true";

          // Toggle expanded state
          this.setAttribute("aria-expanded", isExpanded ? "false" : "true");

          // Check if the required fields are filled
          const isEmailFilled = emailField.value.trim() !== "";
          const isVivaPreparationFilled = vivaPreparationField.value.trim() !== "";
          const isFileUploaded = fileList && fileList.innerText.trim() !== "";  // Check if fileList has any content

          // Show success icon (tick) if the three specific fields are filled
          if (isEmailFilled && isVivaPreparationFilled && isFileUploaded) {
            stepIcon.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="green">
                <path d="M10 15.5l-3.5-3.5L8 10l2 2 5-5L16 8.5l-6 7z"></path>
            </svg>`;
            stepIcon.classList.remove('StepIcon--warning');
            stepIcon.classList.add('StepIcon--success');
          } else {
            // Show warning icon if any of the three required fields is empty
            stepIcon.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="20" height="20" fill="red">
                <path d="M9 13h2v2H9v-2Zm0-8h2v6H9V5Zm.99-5C4.47 0 0 4.48 0 10s4.47 10 9.99 10C15.52 20 20 15.52 20 10S15.52 0 9.99 0ZM10 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8Z"></path>
            </svg>`;
            stepIcon.classList.add('StepIcon--warning');
            stepIcon.classList.remove('StepIcon--success');
          }
        });

      </script>
      <script>
        // Define prices for each assignment type
        const prices = {
          "English Writing Based Assignments": 50.00,
          "Research Paper (Thesis)": 150.00,
          "FYP Based": 200.00,
          "All Types of Presentations": 40.00,
          "App Development": 300.00,
          "Game Development": 350.00,
          "Web Development": 250.00,
          "Content Writing for Any Platform": 60.00,
          "Research": 120.00,
          "Semester/Term Project": 180.00,
          "Professional Web App": 400.00,
          "Technical Report": 100.00,
          "Lab Report": 70.00,
          "Case Study": 90.00,
          "Mathematics/Physics Based Assignments": 80.00,
          "Programming Tutoring": 60.00,
          "All Types of Programming Assignments": 100.00,
          "Article": 45.00,
          "Review Paper": 55.00,
          "Creative Writing": 65.00,
        };

        const assignmentType = document.getElementById('assignmentType');
        const totalPriceElement = document.getElementById('totalPrice');

        // Update price on selection change
        assignmentType.addEventListener('change', () => {
          const selectedType = assignmentType.value;
          const price = prices[selectedType] || 0.00; // Default price if type not found
          totalPriceElement.textContent = `$${price.toFixed(2)}`;
        });
      </script>
      <script>

        document.addEventListener('DOMContentLoaded', function () {

          var checkboxes = document.querySelectorAll('input[type="checkbox"]');


          checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('click', function () {
              var label = this.closest('label');
              var fauxDiv = this.nextElementSibling;


              if (this.checked) {
                label.classList.add('UICheckbox--checked');
                this.classList.add('UICheckbox__checkbox--checked');
                fauxDiv.classList.add('UICheckbox__checkbox--checked');
              } else {
                label.classList.remove('UICheckbox--checked');
                this.classList.remove('UICheckbox__checkbox--checked');
                fauxDiv.classList.remove('UICheckbox__checkbox--checked');
              }
            });
          });
        });


      </script>
      <!-- Script for submit  -->
      <script>
        document.addEventListener("DOMContentLoaded", () => {
          const button = document.querySelector(".Step__btn.Step__btn--done");
          const emailField = document.getElementById("studentEmail");
          const selectField = document.getElementById("assignmentType");
          const deadlineField = document.getElementById("exactDeadline");
          const fileList1 = document.getElementById("fileList");
          const warningMessage = document.querySelector('.OrderFormNotifications');
          warningMessage.style.display = 'none';
          button.addEventListener("click", () => {
            // Check if each field is filled
            const isEmailFilled = emailField.value.trim() !== "";
            const isSelectFilled = selectField.value.trim() !== "";
            const isDeadlineFilled = deadlineField.value.trim() !== "";
            const isFileUploaded = fileList1 && fileList1.innerText.trim() !== "";

            if (!isEmailFilled || !isSelectFilled || !isDeadlineFilled || !isFileUploaded) {
              // Show warning message if any field is empty
              warningMessage.style.display = 'block';
              console.log("Warning: Some fields are empty.");
            } else {
              // Hide warning message and proceed with submission
              warningMessage.style.display = 'none';
            }
          });
        });
      </script>


      <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>

      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css">
      <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>

      <!-- Script for whatsapp number  -->
      <script>

        const input = document.querySelector("#whatsapp");

        const iti = window.intlTelInput(input, {

          initialCountry: "auto",

          geoIpLookup: function (success, failure) {
            fetch('https://ipinfo.io?token=e932ef37602dda', { headers: { 'Accept': 'application/json' } })

              .then((resp) => resp.json())

              .then((resp) => {
                const countryCode = (resp && resp.country) ? resp.country : "us";
                success(countryCode);
              })

              .catch(() => {
                success("us");
              });
          },

          utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
        });

        function formatPhoneNumber(number) {
          return number.replace(/\D/g, '');
        }

        function stripDialCode(number, dialCode) {
          const cleanNumber = formatPhoneNumber(number);
          const dialCodeLength = dialCode.length;

          if (cleanNumber.startsWith(dialCode)) {
            return cleanNumber.slice(dialCodeLength);
          }
          return cleanNumber;
        }

        input.addEventListener('input', function () {
          let rawValue = input.value;
          const countryData = iti.getSelectedCountryData();
          const dialCode = countryData.dialCode;

          if (!rawValue.startsWith('+')) {
            rawValue = '+' + dialCode + formatPhoneNumber(rawValue);
          }

          else {
            rawValue = '+' + formatPhoneNumber(rawValue);
          }
          input.value = rawValue;
        });

        input.addEventListener('countrychange', function () {
          const countryData = iti.getSelectedCountryData();
          const dialCode = countryData.dialCode;
          let rawValue = input.value;

          rawValue = stripDialCode(rawValue, dialCode);

          input.value = '+' + dialCode + rawValue;
        });

      </script>

      <script>
        // Prefill the form with data from sessionStorage if available
        window.onload = function () {
          const formDataString = sessionStorage.getItem('formData');

          if (formDataString) {

            try {

              const formData = JSON.parse(formDataString);
              $('#assignmentType').val(formData.assignmentType || '');

              // $('#daysUntilDue').val(formData.daysUntilDue || '');

              $('#exactDeadline').val(formData.exactDeadline || '');

              // $('#gradeDesired').val(formData.gradeDesired || '');

              $('#studentEmail').val(formData.email || '');

              $('#whatsapp').val(formData.whatsapp || '');

              $('#additionalDetails').val(formData.additionalDetails || '');

              $('#fileUploads').val(formData.fileUploads || '');

              $('#programmingLanguage').val(formData.programmingLanguage || '');

              $('#webDevelopmentType').val(formData.webDevelopmentType || '');

              $('#fullStackFramework').val(formData.fullStackFramework || '');

              $('#topProgrammer').prop('checked', formData.topProgrammer || false);

              $('#wellCommentedCode').prop('checked', formData.wellCommentedCode || false);

              $('#noOpenSource').prop('checked', formData.noOpenSource || false);

              $('#vivaPreparation').val(formData.vivaPreparation || 'no');

              // $('#vivaTimingSelect').val(formData.vivaTiming || 'Will decide later' || '3 to 4 PM' || '5 to 6 PM');
            }

            catch (error) {
              console.error('Error parsing formData from sessionStorage:', error);
            }
          }
        }

      </script>

      <script type="text/javascript" id=""
        charset="">(function () { try { window.setTimeout(function () { dataLayer.push({ event: "afterLoad" }) }, 1500) } catch (a) { } })();</script>
      <iframe allow="join-ad-interest-group" data-tagging-id="G-VQG1LX0L0N" data-load-time="1728552463810" height="0"
        width="0"
        src="https://td.doubleclick.net/td/ga/rul?tid=G-VQG1LX0L0N&amp;gacid=905713748.1726674554&amp;gtm=45je4a90h2v875673677z86965597za200zb6965597&amp;dma=0&amp;gcd=13l3l3l3l1l1&amp;npa=0&amp;pscdl=noapi&amp;aip=1&amp;fledge=1&amp;frm=0&amp;tag_exp=101529665~101671035~101686685&amp;z=1000950202"
        style="display: none; visibility: hidden;"></iframe>
      <iframe allow="join-ad-interest-group" data-tagging-id="G-VQG1LX0L0N" data-load-time="1728552305828" height="0"
        width="0"
        src="https://td.doubleclick.net/td/ga/rul?tid=G-VQG1LX0L0N&amp;gacid=905713748.1726674554&amp;gtm=45je4a90h2v875673677z86965597za200zb6965597&amp;dma=0&amp;gcd=13l3l3l3l1l1&amp;npa=0&amp;pscdl=noapi&amp;aip=1&amp;fledge=1&amp;frm=0&amp;tag_exp=101529665~101671035~101686685&amp;z=158840610"
        style="display: none; visibility: hidden;"></iframe>
</body>
</html>