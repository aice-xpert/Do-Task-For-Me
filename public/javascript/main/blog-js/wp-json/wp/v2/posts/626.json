{"id":626,"date":"2023-12-14T23:42:17","date_gmt":"2023-12-14T23:42:17","guid":{"rendered":"https:\/\/domyassignments.com\/blog\/?p=626"},"modified":"2023-12-15T00:31:54","modified_gmt":"2023-12-15T00:31:54","slug":"how-to-close-scanner-in-java","status":"publish","type":"post","link":"https:\/\/domyassignments.com\/blog\/how-to-close-scanner-in-java\/","title":{"rendered":"How to Close Scanner in JAVA"},"content":{"rendered":"<p><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/How-to-Close-Scanner-in-JAVA-1024x565.png\" alt=\"How to close the Scanner method in java\" width=\"1024\" height=\"565\" class=\"alignnone size-large wp-image-666\" srcset=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/How-to-Close-Scanner-in-JAVA-1024x565.png 1024w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/How-to-Close-Scanner-in-JAVA-300x166.png 300w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/How-to-Close-Scanner-in-JAVA-768x424.png 768w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/How-to-Close-Scanner-in-JAVA-1536x848.png 1536w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/How-to-Close-Scanner-in-JAVA.png 1786w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p>The Scanner class on the Java program can be closed by using the close method. The close method is a public void function that is already implemented in the Java scanner utility class. It closes all the operations on the Scanner object when called. The following sections outline how this is done correctly.<\/p>\n<p><!--more--><\/p>\n<h2>Overview of the scanner in Java<\/h2>\n<p>The Java scanner is a class in the utility packages of the <a href=\"https:\/\/domyassignments.com\/do-my-java-homework.html\">Java programming<\/a> language that is imported using the code &ldquo;import java.util.Scanner&rdquo;. It acts as a gateway of communication between the user and the software. Precisely, it is a class that allows the user to type in the information that can be used by the software or program to complete the process. The scanner class has several functions that are used in accomplishing different tasks. Some of the functions include the following:<\/p>\n<ul>\n<li>nextInt(); reads data of type integer from the user.<\/li>\n<li>nextFloat(): reads data of type float from the user.<\/li>\n<li>nextBoolean(): reads the Boolean data type from the user.<\/li>\n<li>nextLine(); read a single line from the user.<\/li>\n<li>nextByte(): used in reading Bytes from the user.<\/li>\n<li>nextLong(): reads the data type long from the user.<\/li>\n<\/ul>\n<p><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-nextLine-function-to-read-data-from-the-user-1024x637.png\" alt=\"The nextLine() function to read data from the user\" width=\"1024\" height=\"637\" class=\"alignnone size-large wp-image-636\" srcset=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-nextLine-function-to-read-data-from-the-user-1024x637.png 1024w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-nextLine-function-to-read-data-from-the-user-300x187.png 300w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-nextLine-function-to-read-data-from-the-user-768x478.png 768w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-nextLine-function-to-read-data-from-the-user.png 1120w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p><em>Figure 1: The nextLine() function to read data from the user.<\/em><\/p>\n<p>Figure 1 shows the nextLine() function that is used in reading data from the user.<\/p>\n<p>After using the above functions to read data from the user the function has to be closed to avoid run time errors.<\/p>\n<h2>The close() Method Explained<\/h2>\n<p>The java. util.Scanner. close() is used in closing the scanner. Closing the class means that all the operations that are involved shall be stopped. When the scanner is not closed then it can easily be invoked by the program thus causing runtime error. The close() function is a void method that does not need any parameters or return value i.e. (public void close()).<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-scanner-class-and-the-close-function-1024x573.png\" alt=\"The scanner class and the close function\" width=\"1024\" height=\"573\" class=\"alignnone size-large wp-image-640\" srcset=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-scanner-class-and-the-close-function-1024x573.png 1024w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-scanner-class-and-the-close-function-300x168.png 300w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-scanner-class-and-the-close-function-768x429.png 768w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/The-scanner-class-and-the-close-function.png 1327w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/p>\n<p><em>Figure 2: The scanner class and the close function.<\/em><\/p>\n<p>The scanner class operates in three processes. The first process is through calling the package using the code Scanner cs=new Scanner(System. in ) on line 39 in Figure 1. The cs is the variable that is given to access its resources easily. The second process is through calling functions that are used in reading data from the user. The function that is called depends on the type of data that is being read from the user. On figure 1 line 46 cs.nextLine() function was called. Meaning that the next line was read by the user. The final stage was the close stage in which the close() function was called to close the operations. An example of the close code is in Figure 1 line 66.<\/p>\n<h2>Best Practices for Using Scanner<\/h2>\n<p>The scanner is a class that is used in passing different data types to the program. The following are some of the best practices while using it:<\/p>\n<ul>\n<li>Use of the nextLine() function to read a line of text.<\/li>\n<li>Use methods like nextInt(), nextLong(),nextFloat() and nextDouble for reading numbers or else the program shall display errors.<\/li>\n<li>Using the hasNext() function to check available tokens.<\/li>\n<li>Setting the delimiters when using the Scanner class to read data from external files like CSV and text files.<\/li>\n<li>Closing the Scanner methods using the close function after the use.<\/li>\n<li>Use of try-catch methods while closing the Scanner.<\/li>\n<\/ul>\n<h2>Troubleshooting Common Scanner Issues<\/h2>\n<p>Many issues can occur when using the Scanner class. Some of the issues are outlined as follows.<\/p>\n<h3>Handling incorrect input values<\/h3>\n<p>The most common one is the InpuMismatachException, it mainly occurs when the input that has been provided by the user does not match the expected type. For example when we use the nextInt() method on the code and the user enters the string instead of an integer the inputMistmatchExcetion shall be displayed. The issue can be solved by using a try-catch block. The block shall print an error message and request the user to provide another input.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Handling-incorrect-input-values.png\" alt=\"Handling incorrect input values\" width=\"812\" height=\"661\" class=\"alignnone size-full wp-image-648\" srcset=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Handling-incorrect-input-values.png 812w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Handling-incorrect-input-values-300x244.png 300w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Handling-incorrect-input-values-768x625.png 768w\" sizes=\"(max-width: 812px) 100vw, 812px\" \/><\/p>\n<p><em>Figure 3: Handling incorrect input values<\/em><\/p>\n<p>In the attached code when the user provides a string data type instead of an integer data type, the code shall print the value and the message, &ldquo;Invalid input&rdquo;. The user shall be able to understand the error and provide another value.<\/p>\n<h3>Reading past the end of any Input<\/h3>\n<p>NoSuchElementExpection shall be thrown when using methods such as next(), nextInt() and the other functions when no more data is available to be read to the program. To avoid such errors functions such as hasNext(),hasNextLine() and many others have to be used to check if there is another token to be read.<\/p>\n<h2>Enhancing the Code Efficiency with the Scanner Closure<\/h2>\n<p>If the Scanner is not closed then the program shall not be able to garbage collect the scanner objects and we shall have memory leaks on the program. To avoid memory leaks on the code we should close the Scanner after we have finished reading the inputs from the user or files. The void close() public scanner method allows the Java program to reclaim the scanner memory and use it in other functions. The scanner should always be closed after exhausting inputs from the user or files to avoid memory leaks.<\/p>\n<h3>Implementing the close() Method Correctly<\/h3>\n<p>The scanner close method should be used within the try-catch block to throw an exception if there is an error. Figure 3 below shows the correct implementation of the scanner close method.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Correct-implementation-of-the-close-method.png\" alt=\"Correct implementation of the close method\" width=\"951\" height=\"657\" class=\"alignnone size-full wp-image-652\" srcset=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Correct-implementation-of-the-close-method.png 951w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Correct-implementation-of-the-close-method-300x207.png 300w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Correct-implementation-of-the-close-method-768x531.png 768w\" sizes=\"(max-width: 951px) 100vw, 951px\" \/><\/p>\n<p><em>Figure 4: Correct implementation of the close method&nbsp;<\/em><\/p>\n<h3>Understanding the Impact of Open Scanners<\/h3>\n<p>An unclosed Scanner causes a memory leak in the program due to incomplete garbage collection on the Scanner object. The program will mismanage the memory allocation since the memory that is not needed in the Scanner object is not released through closing the Scanner class. Memory leaks cause an increase in memory usage.<\/p>\n<h3>Advanced Tips for Scanner Management<\/h3>\n<p>The scanner can be managed in the following ways:<\/p>\n<ul>\n<li>Using the try-catch block to throw exception errors when not implemented correctly or when the use provides an invalid input.<\/li>\n<li>Use of hasNext(),hasNextInt() and many others to find if the program has reached the end of reading the tokens to avoid runtime errors.<\/li>\n<li>Closing the Scanner by using the close method to avoid memory leaks in the program.<\/li>\n<\/ul>\n<h3>Dealing with IllegalStateException<\/h3>\n<p>IllegalStateException is a runtime exception that is thrown when a method is called at an incorrect time. To avoid the illegalStateException the program should make sure that the method is not called at an incorrect time. An example of this is when reading data from a file using the Scanner class in a while loop, we should close the Scanner at the end of the while loop. If we close the Scanner within the loop an illegalStateException shall be thrown.<\/p>\n<\/p>\n<h2>FAQ:<\/h2>\n<h3>How do you properly close a Scanner in Java?<\/h3>\n<p>The scanner can be closed using the close method. The close method is Java in build scanner method that is meant for stopping all the operations that are involved with the Scanner class. The close method should be within a try-catch block to capture other exceptions that occur while closing the Scanner class. An example of an exception that can occur while closing the scanner method is the illegalStateException which occurs when the close method is called at an incorrect time. The following code shows how the Scanner can be closed correctly.<\/p>\n<p><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Correct-way-of-closing-the-Scanner-class.png\" alt=\"Correct way of closing the Scanner class\" width=\"791\" height=\"557\" class=\"alignnone size-full wp-image-656\" srcset=\"https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Correct-way-of-closing-the-Scanner-class.png 791w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Correct-way-of-closing-the-Scanner-class-300x211.png 300w, https:\/\/domyassignments.com\/blog\/wp-content\/uploads\/2023\/12\/Correct-way-of-closing-the-Scanner-class-768x541.png 768w\" sizes=\"(max-width: 791px) 100vw, 791px\" \/><\/p>\n<p><em>Figure 5: Correct way of closing the Scanner class.<\/em><\/p>\n<h3>What are the consequences of not closing a Scanner?<\/h3>\n<p>The unclosed Scanner leads to memory leakage due to uncollected garbage on the Scanner object. This shall lead to misallocation of the memory thus increasing the usage of the computer memory and slowing down the processes. Closing the scanner leads to appropriate memory management thus avoiding memory leaks smoothening the running of processes in the program.<\/p>\n<h3>Can you close a Scanner in a try-with-resources block?<\/h3>\n<p>In try -with -resources the resources that are supposed to be used in the try block are declared and then they shall all be closed after the block is executed. There is no need to have the close method since all the resources shall be closed after the execution.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>The Scanner class on the Java program can be closed by using the close method. The close method is a public void function that is already implemented in the Java scanner utility class. It closes all the operations on the Scanner object when called. The following sections outline how this is done correctly.<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"closed","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[11],"tags":[],"_links":{"self":[{"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/posts\/626"}],"collection":[{"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/comments?post=626"}],"version-history":[{"count":14,"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/posts\/626\/revisions"}],"predecessor-version":[{"id":668,"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/posts\/626\/revisions\/668"}],"wp:attachment":[{"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/media?parent=626"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/categories?post=626"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/domyassignments.com\/blog\/wp-json\/wp\/v2\/tags?post=626"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}